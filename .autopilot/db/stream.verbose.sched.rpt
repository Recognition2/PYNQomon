

================================================================
== Vivado HLS Report for 'stream'
================================================================
* Date:           Thu Nov 29 15:21:56 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        Reconfigurable
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     3.846|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 4 [1/1] (1.00ns)   --->   "%mask_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %mask)"   --->   Operation 4 'read' 'mask_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 5 [2/2] (0.00ns)   --->   "%empty = call { i32, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i1P.i1P.i1P.i1P(i32* %src_V_data_V, i4* %src_V_keep_V, i4* %src_V_strb_V, i1* %src_V_user_V, i1* %src_V_last_V, i1* %src_V_id_V, i1* %src_V_dest_V)" [Reconfigurable/solution1/invstripe.cpp:44]   --->   Operation 5 'read' 'empty' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 2 <SV = 1> <Delay = 3.84>
ST_2 : Operation 6 [1/2] (0.00ns)   --->   "%empty = call { i32, i4, i4, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i1P.i1P.i1P.i1P(i32* %src_V_data_V, i4* %src_V_keep_V, i4* %src_V_strb_V, i1* %src_V_user_V, i1* %src_V_last_V, i1* %src_V_id_V, i1* %src_V_dest_V)" [Reconfigurable/solution1/invstripe.cpp:44]   --->   Operation 6 'read' 'empty' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%tmp_data_V_1 = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty, 0" [Reconfigurable/solution1/invstripe.cpp:44]   --->   Operation 7 'extractvalue' 'tmp_data_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty, 1" [Reconfigurable/solution1/invstripe.cpp:44]   --->   Operation 8 'extractvalue' 'tmp_keep_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty, 2" [Reconfigurable/solution1/invstripe.cpp:44]   --->   Operation 9 'extractvalue' 'tmp_strb_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty, 3" [Reconfigurable/solution1/invstripe.cpp:44]   --->   Operation 10 'extractvalue' 'tmp_user_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty, 4" [Reconfigurable/solution1/invstripe.cpp:44]   --->   Operation 11 'extractvalue' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_id_V = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty, 5" [Reconfigurable/solution1/invstripe.cpp:44]   --->   Operation 12 'extractvalue' 'tmp_id_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_dest_V = extractvalue { i32, i4, i4, i1, i1, i1, i1 } %empty, 6" [Reconfigurable/solution1/invstripe.cpp:44]   --->   Operation 13 'extractvalue' 'tmp_dest_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%tmp = trunc i32 %mask_read to i1" [Reconfigurable/solution1/invstripe.cpp:64]   --->   Operation 14 'trunc' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%invert = xor i1 %tmp, true" [Reconfigurable/solution1/invstripe.cpp:64]   --->   Operation 15 'xor' 'invert' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%x_load = load i16* @x, align 2" [Reconfigurable/solution1/invstripe.cpp:66]   --->   Operation 16 'load' 'x_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (2.42ns)   --->   "%p_not1 = icmp ult i16 %x_load, 691" [Reconfigurable/solution1/invstripe.cpp:66]   --->   Operation 17 'icmp' 'p_not1' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%brmerge = or i1 %p_not1, %invert" [Reconfigurable/solution1/invstripe.cpp:66]   --->   Operation 18 'or' 'brmerge' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%p_not = or i32 %tmp_data_V_1, -16777216" [Reconfigurable/solution1/invstripe.cpp:67]   --->   Operation 19 'or' 'p_not' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%p_s = xor i32 %p_not, 16777215" [Reconfigurable/solution1/invstripe.cpp:67]   --->   Operation 20 'xor' 'p_s' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_data_V = select i1 %brmerge, i32 %tmp_data_V_1, i32 %p_s" [Reconfigurable/solution1/invstripe.cpp:89]   --->   Operation 21 'select' 'tmp_data_V' <Predicate = true> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 22 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i1P.i1P.i1P.i1P(i32* %dst_V_data_V, i4* %dst_V_keep_V, i4* %dst_V_strb_V, i1* %dst_V_user_V, i1* %dst_V_last_V, i1* %dst_V_id_V, i1* %dst_V_dest_V, i32 %tmp_data_V, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V, i1 %tmp_dest_V)" [Reconfigurable/solution1/invstripe.cpp:89]   --->   Operation 22 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %tmp_last_V, label %0, label %1" [Reconfigurable/solution1/invstripe.cpp:92]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (2.07ns)   --->   "%tmp_5 = add i16 %x_load, 1" [Reconfigurable/solution1/invstripe.cpp:98]   --->   Operation 24 'add' 'tmp_5' <Predicate = (!tmp_last_V)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.76ns)   --->   "store i16 %tmp_5, i16* @x, align 2" [Reconfigurable/solution1/invstripe.cpp:98]   --->   Operation 25 'store' <Predicate = (!tmp_last_V)> <Delay = 1.76>
ST_2 : Operation 26 [1/1] (1.76ns)   --->   "store i16 0, i16* @x, align 2" [Reconfigurable/solution1/invstripe.cpp:94]   --->   Operation 26 'store' <Predicate = (tmp_last_V)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 2.07>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %src_V_data_V), !map !76"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %src_V_keep_V), !map !80"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %src_V_strb_V), !map !84"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %src_V_user_V), !map !88"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %src_V_last_V), !map !92"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %src_V_id_V), !map !96"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %src_V_dest_V), !map !100"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %dst_V_data_V), !map !104"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %dst_V_keep_V), !map !108"   --->   Operation 35 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %dst_V_strb_V), !map !112"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %dst_V_user_V), !map !116"   --->   Operation 37 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %dst_V_last_V), !map !120"   --->   Operation 38 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %dst_V_id_V), !map !124"   --->   Operation 39 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %dst_V_dest_V), !map !128"   --->   Operation 40 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %mask), !map !132"   --->   Operation 41 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @stream_str) nounwind"   --->   Operation 42 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [Reconfigurable/solution1/invstripe.cpp:24]   --->   Operation 43 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %src_V_data_V, i4* %src_V_keep_V, i4* %src_V_strb_V, i1* %src_V_user_V, i1* %src_V_last_V, i1* %src_V_id_V, i1* %src_V_dest_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [Reconfigurable/solution1/invstripe.cpp:25]   --->   Operation 44 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %dst_V_data_V, i4* %dst_V_keep_V, i4* %dst_V_strb_V, i1* %dst_V_user_V, i1* %dst_V_last_V, i1* %dst_V_id_V, i1* %dst_V_dest_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [Reconfigurable/solution1/invstripe.cpp:26]   --->   Operation 45 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %mask, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [Reconfigurable/solution1/invstripe.cpp:27]   --->   Operation 46 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [Reconfigurable/solution1/invstripe.cpp:28]   --->   Operation 47 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i1P.i1P.i1P.i1P(i32* %dst_V_data_V, i4* %dst_V_keep_V, i4* %dst_V_strb_V, i1* %dst_V_user_V, i1* %dst_V_last_V, i1* %dst_V_id_V, i1* %dst_V_dest_V, i32 %tmp_data_V, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V, i1 %tmp_dest_V)" [Reconfigurable/solution1/invstripe.cpp:89]   --->   Operation 48 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "br label %2"   --->   Operation 49 'br' <Predicate = (!tmp_last_V)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%y_load = load i16* @y, align 2" [Reconfigurable/solution1/invstripe.cpp:95]   --->   Operation 50 'load' 'y_load' <Predicate = (tmp_last_V)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (2.07ns)   --->   "%tmp_4 = add i16 %y_load, 1" [Reconfigurable/solution1/invstripe.cpp:95]   --->   Operation 51 'add' 'tmp_4' <Predicate = (tmp_last_V)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "store i16 %tmp_4, i16* @y, align 2" [Reconfigurable/solution1/invstripe.cpp:95]   --->   Operation 52 'store' <Predicate = (tmp_last_V)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "br label %2" [Reconfigurable/solution1/invstripe.cpp:96]   --->   Operation 53 'br' <Predicate = (tmp_last_V)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "ret void" [Reconfigurable/solution1/invstripe.cpp:99]   --->   Operation 54 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'mask' [34]  (1 ns)

 <State 2>: 3.85ns
The critical path consists of the following:
	'load' operation ('x_load', Reconfigurable/solution1/invstripe.cpp:66) on static variable 'x' [50]  (0 ns)
	'add' operation ('tmp_5', Reconfigurable/solution1/invstripe.cpp:98) [59]  (2.08 ns)
	'store' operation (Reconfigurable/solution1/invstripe.cpp:98) of variable 'tmp_5', Reconfigurable/solution1/invstripe.cpp:98 on static variable 'x' [60]  (1.77 ns)

 <State 3>: 2.08ns
The critical path consists of the following:
	'load' operation ('y_load', Reconfigurable/solution1/invstripe.cpp:95) on static variable 'y' [64]  (0 ns)
	'add' operation ('tmp_4', Reconfigurable/solution1/invstripe.cpp:95) [65]  (2.08 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
